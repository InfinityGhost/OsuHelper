<Window
    x:Class="OsuHelper.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:command="http://www.galasoft.ch/mvvmlight"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    Title="osu!helper v{0}"
    Width="850"
    Height="625"
    Background="{DynamicResource MaterialDesignPaper}"
    DataContext="{Binding MainViewModel, Source={StaticResource Locator}}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Icon="/osu!helper;component/favicon.ico"
    SnapsToDevicePixels="True"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource SecondaryTextBrush}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <CollectionViewSource
            x:Key="RecommendationsView"
            Filter="RecommendationsView_OnFilter"
            Source="{Binding Recommendations}" />
    </Window.Resources>

    <materialDesign:DialogHost>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Toolbar  -->
            <Grid
                Grid.Row="0"
                Background="{DynamicResource PrimaryHueMidBrush}"
                IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                TextElement.Foreground="{DynamicResource SecondaryInverseTextBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Filters  -->
                <StackPanel
                    Grid.Column="0"
                    Margin="5"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Visibility="{Binding HasData, Converter={StaticResource BoolToVisibilityConverter}}">
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Text="Filters:" />

                    <CheckBox
                        x:Name="NomodFilterCheckBox"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Checked="NomodFilterCheckBox_OnChecked"
                        Content="NM"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="NomodFilterCheckBox_OnUnchecked" />
                    <CheckBox
                        x:Name="HiddenFilterCheckBox"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Checked="HiddenFilterCheckBox_OnChecked"
                        Content="HD"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="HiddenFilterCheckBox_OnUnchecked" />
                    <CheckBox
                        x:Name="HardRockFilterCheckBox"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Checked="HardRockFilterCheckBox_OnChecked"
                        Content="HR"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="HardRockFilterCheckBox_OnUnchecked" />
                    <CheckBox
                        x:Name="DoubleTimeFilterCheckBox"
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Checked="DoubleTimeFilterCheckBox_OnChecked"
                        Content="DT"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="DoubleTimeFilterCheckBox_OnUnchecked" />
                </StackPanel>

                <!--  Buttons  -->
                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Button
                        Margin="4,8,0,8"
                        VerticalAlignment="Center"
                        Command="{Binding ShowAboutCommand}"
                        Style="{DynamicResource MaterialDesignFlatDarkButton}"
                        ToolTip="About osu!helper">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="InformationOutline" />
                    </Button>
                    <Button
                        Margin="4,8,0,8"
                        VerticalAlignment="Center"
                        Command="{Binding ShowSettingsCommand}"
                        Style="{DynamicResource MaterialDesignFlatDarkButton}"
                        ToolTip="Settings">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="Settings" />
                    </Button>
                    <Button
                        Margin="4,8,8,8"
                        VerticalAlignment="Center"
                        Command="{Binding PopulateRecommendationsCommand}"
                        Style="{DynamicResource MaterialDesignRaisedAccentButton}"
                        ToolTip="Update recommendations">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="Sync" />
                            <TextBlock
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Text="UPDATE" />
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>

            <!--  Progress bar  -->
            <ProgressBar
                Grid.Row="1"
                Background="{DynamicResource PrimaryHueMidBrush}"
                IsIndeterminate="{Binding IsBusy}" />

            <Grid Grid.Row="2">
                <!--  Recommendations  -->
                <DataGrid
                    Background="{DynamicResource MaterialDesignCardBackground}"
                    HorizontalScrollBarVisibility="Disabled"
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                    ItemsSource="{Binding Source={StaticResource RecommendationsView}}"
                    SelectedItem="{Binding SelectedRecommendation}"
                    VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding HasData, Converter={StaticResource BoolToVisibilityConverter}}">
                    <!--  Show beatmap details when clicked  -->
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <command:EventToCommand Command="{Binding ShowBeatmapDetailsCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <!--  Hand cursor  -->
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                            <Setter Property="Cursor" Value="Hand" />
                        </Style>
                    </DataGrid.RowStyle>
                    <!--  Columns  -->
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Beatmap.FullName}"
                            Header="Name" />
                        <DataGridTextColumn Binding="{Binding Mods, Converter={StaticResource ModsToStringConverter}}" Header="Mods" />
                        <DataGridTextColumn Binding="{Binding TraitsWithMods.StarRating, StringFormat=\{0:0.#\}}" Header="SR">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsStarRatingAffected}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentDarkTextBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding TraitsWithMods.ApproachRate, StringFormat=\{0:0.#\}}" Header="AR">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsApproachRateAffected}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentDarkTextBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding TraitsWithMods.OverallDifficulty, StringFormat=\{0:0.#\}}" Header="OD">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOverallDifficultyAffected}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentDarkTextBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding TraitsWithMods.Tempo, StringFormat=\{0:N0\}}" Header="BPM">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsTempoAffected}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentDarkTextBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding TraitsWithMods.Duration, Converter={StaticResource TimeSpanToShortStringConverter}}" Header="Length">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDurationAffected}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentDarkTextBrush}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Binding="{Binding ExpectedAccuracy, StringFormat=\{0:P2\}}" Header="Accuracy" />
                        <DataGridTextColumn Binding="{Binding ExpectedPerformancePoints, StringFormat=\{0:N0\} pp}" Header="Gain" />
                        <DataGridTextColumn Binding="{Binding Weight}" Header="Weight" />
                    </DataGrid.Columns>
                </DataGrid>

                <!--  Placeholder  -->
                <TextBlock
                    Margin="8,0,8,32"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    TextWrapping="WrapWithOverflow"
                    Visibility="{Binding HasData, Converter={StaticResource InvertBoolToVisibilityConverter}}">
                    <Run Text="Press the" />
                    <Run Foreground="{DynamicResource PrimaryTextBrush}" Text="Update" />
                    <Run Text="button to analyze your plays and generate recommendations" />
                </TextBlock>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>
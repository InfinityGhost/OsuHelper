<Window
    x:Class="OsuHelper.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    Title="osu!helper v{0}"
    Width="850"
    Height="625"
    Background="{DynamicResource MaterialDesignPaper}"
    DataContext="{Binding MainViewModel, Source={StaticResource Locator}}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Icon="/osu!helper;component/favicon.ico"
    SnapsToDevicePixels="True"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource SecondaryTextBrush}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterScreen">
    <materialDesign:DialogHost>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Toolbar  -->
            <Grid
                Grid.Column="0"
                Background="{DynamicResource PrimaryHueMidBrush}"
                IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                TextElement.Foreground="{DynamicResource SecondaryInverseTextBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Filters  -->
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="5"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Text="Filters:" />

                    <CheckBox
                        x:Name="NomodFilterCheckBox"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Checked="NomodFilterCheckBox_OnChecked"
                        Content="NM"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="NomodFilterCheckBox_OnUnchecked" />
                    <CheckBox
                        x:Name="HiddenFilterCheckBox"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Checked="HiddenFilterCheckBox_OnChecked"
                        Content="HD"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="HiddenFilterCheckBox_OnUnchecked" />
                    <CheckBox
                        x:Name="HardrockFilterCheckBox"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Checked="HardrockFilterCheckBox_OnChecked"
                        Content="HR"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="HardrockFilterCheckBox_OnUnchecked" />
                    <CheckBox
                        x:Name="DoubletimeFilterCheckBox"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Checked="DoubletimeFilterCheckBox_OnChecked"
                        Content="DT"
                        Foreground="{DynamicResource PrimaryInverseTextBrush}"
                        IsChecked="True"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}"
                        Unchecked="DoubletimeFilterCheckBox_OnUnchecked" />
                </StackPanel>

                <!--  Buttons  -->
                <StackPanel
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="5"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Button
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Command="{Binding GetRecommendationsCommand}"
                        Style="{DynamicResource MaterialDesignFlatDarkButton}"
                        ToolTip="Refresh recommendations">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="Sync" />
                    </Button>
                    <Button
                        x:Name="ShowSettingsDialogButton"
                        Margin="5,0,0,0"
                        VerticalAlignment="Center"
                        Click="ShowSettingsDialogButton_OnClick"
                        Style="{DynamicResource MaterialDesignFlatDarkButton}"
                        ToolTip="Settings">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="Settings" />
                    </Button>
                </StackPanel>

                <!--  Progress bar  -->
                <ProgressBar
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Background="Transparent"
                    IsIndeterminate="{Binding IsBusy}" />
            </Grid>

            <!--  Recommendations  -->
            <DataGrid
                Grid.Row="1"
                Background="{DynamicResource MaterialDesignCardBackground}"
                HorizontalScrollBarVisibility="Disabled"
                IsEnabled="{Binding IsBusy, Converter={StaticResource InvertBoolConverter}}"
                ItemsSource="{Binding Recommendations}"
                VerticalScrollBarVisibility="Auto"
                Visibility="{Binding HasData, Converter={StaticResource BoolToVisibilityConverter}}">
                <DataGrid.Columns>
                    <DataGridTextColumn
                        Width="*"
                        Binding="{Binding Beatmap.FullName}"
                        Header="Name" />
                    <DataGridTextColumn Binding="{Binding Mods, Converter={StaticResource EnabledModsToStringConverter}}" Header="Mods" />
                    <DataGridTextColumn Binding="{Binding TraitsWithMods.StarRating, StringFormat=\{0:0.#\}}" Header="SR">
                        <DataGridTextColumn.CellStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsStarRatingAffected}" Value="True">
                                        <Setter Property="Foreground" Value="OrangeRed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding TraitsWithMods.ApproachRate, StringFormat=\{0:0.#\}}" Header="AR">
                        <DataGridTextColumn.CellStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsApproachRateAffected}" Value="True">
                                        <Setter Property="Foreground" Value="OrangeRed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding TraitsWithMods.OverallDifficulty, StringFormat=\{0:0.#\}}" Header="OD">
                        <DataGridTextColumn.CellStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOverallDifficultyAffected}" Value="True">
                                        <Setter Property="Foreground" Value="OrangeRed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding TraitsWithMods.BeatsPerMinute, StringFormat=\{0:N0\}}" Header="BPM">
                        <DataGridTextColumn.CellStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsBeatsPerMinuteAffected}" Value="True">
                                        <Setter Property="Foreground" Value="OrangeRed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding TraitsWithMods.Duration, Converter={StaticResource TimeSpanToShortStringConverter}}" Header="Length">
                        <DataGridTextColumn.CellStyle>
                            <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDurationAffected}" Value="True">
                                        <Setter Property="Foreground" Value="OrangeRed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding ExpectedAccuracy, StringFormat=\{0:P2\}}" Header="Accuracy" />
                    <DataGridTextColumn Binding="{Binding ExpectedPerformancePoints, StringFormat=\{0:N0\} pp}" Header="Gain" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </materialDesign:DialogHost>
</Window>